using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Controls;

namespace assessment2_cs.Classes
{
    // Author: Svetlozar Georgiev
    // Date of last modification: 8/12/2016
    // Purpose: Contains some commonly used code for comboboxes
    public static class ComboBoxExtensions
    {
        // returns the index of a combobox item which contains a string subString
        public static int FindSubStringIndex(this ComboBox combo, string subString, StringComparison comparer = StringComparison.CurrentCulture)
        {
            // Sanity check parameters
            if (combo == null) throw new ArgumentNullException("combo");
            if (subString == null)
            {
                return -1;
            }

            for (int index = 0; index < combo.Items.Count; index++)
            {
                object obj = combo.Items[index];
                if (obj == null) continue;
                string item = Convert.ToString(obj, CultureInfo.CurrentCulture);
                if (string.IsNullOrWhiteSpace(item) && string.IsNullOrWhiteSpace(subString))
                    return index;
                int indexInItem = item.IndexOf(subString, comparer);
                if (indexInItem >= 0)
                    return index;
            }

            return -1;
        }

        // extracts the id from an item of a combobox which was generated by an overriden ToString() method of 
        // a booking or a customer object
        public static int FindId(this ComboBox combo)
        {
            // Sanity check parameters
            if (combo == null) throw new ArgumentNullException("combo");

            int search = 0;
            string s = combo.SelectedValue.ToString(); // get the selected value of the combobox
            var result = s.Split(new char[] { ':' }); // split on every semicolon
            search = Convert.ToInt32(result[0]); // the element at [0] should be a booking reference or a customer reference
            return search;
        }

        // loads all the bookings from the database into a combobox
        public static void LoadBookings(this ComboBox combo)
        {
            Booking b = new Booking();
            List<Booking> bookings = new List<Booking>();
            try
            {
                bookings = b.GetBookings(); // get all the bookings
                foreach (var booking in bookings) // call the overriden ToString() method 
                {                                 // on each booking and add it as an item in the combobox
                    combo.Items.Add(booking.ToString());
                }
            }
            catch (SqlException ex) // rethrow any exceptions
            {
                throw ex;
            }
        }

        // loads all the customers in a combobox
        public static void LoadCustomers(this ComboBox combo)
        {
            Customer c = new Customer();
            try
            {
                List<Customer> customers = c.GetCustomers(); // get all the customers
                foreach (var c_ in customers) // call the ToString() method on each customer 
                {                                   
                    combo.Items.Add(c_.ToString()); // and add the resulting string as a combobox item
                }
            }
            catch (SqlException ex) // rethrow any exceptions
            {
                throw ex;
            }
        }
    }
}
